#Database parameters
db_keys:
  I+J3: 15
  J3: 10
  J1: 6
  N: 28

model_kwargs:
#ODE model right side
  equation_strings:
    S: "N*Lambd - beta_c*S*(I+J3)/N - lambd_sigma*S*(J1+J3)/N - mu*S + r1*I"
    I: "beta_c*S*(I+J3)/N-(mu+d+r1)*I"
    J1: "lambd_sigma*S*(J1+J3)/N - beta_c*J1*(I+J3)/N - (mu)*J1"
    J3: "beta_c*J1*(I+J3)/N - (mu+d_star)*J3"
      #A: '0'
#ODE model aliases
  custom_vars:
    #JR: "(S+J1+J3)/(J3)"
    #N: "S+I+J1+J3"
    blank: '0'

#ODE model initial state
initial_state:
  S: 0.95
  I: 0.05
  J1: 0
  J3: 0.01
    #A: 0 

#parameters of ODE model, including default values for restored
all_parameters:
  Lambd: 0.01
  beta_c:  0.025
  lambd_sigma: 0.0004
  mu: 0.0139
  k: 0.05
  k_star: 0.25 
  d: 0.1  
  d_star: 0.2 
  f: 0.5
  r1: 3
  r2: 1
  # N: 4315.759 #sverdlovsk
  k2: 1

#keys of given data for inverse problem
passed_keys:
  - I
  - J1

#bounds of restored parameters in inverse problem
estim_and_bounds:
  beta_c: [0, 1]
  lambd_sigma: [0, 1]
    #k: default
    #k_star: default
  r1: [0,5]
  r2: [0,5]
  #k2: default

